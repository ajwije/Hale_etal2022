plotAnnoPie(peakAnnoList[["P1"]])
plotAnnoPie(peakAnnoList[["W4"]])
peakAnnoList
peakP1 <- readPeakFile(samplefiles[[3]])
covplot(M1_peaks, weightCol="V5")
M1_annotdf <- data.frame(peakAnnoList[["M1"]]@anno)
View(M1_annotdf)
M1_annotdf[M1_annotdf$annotation== "Promoter", ]
M1_annotdf[M1_annotdf$annotation== "Promoter", ][, "distanceToTSS"]
plot(M1_annotdf[M1_annotdf$annotation== "Promoter", ][, "distanceToTSS"])
plot(x=range(-1000:1000), M1_annotdf[M1_annotdf$annotation== "Promoter", ][, "distanceToTSS"])
plot(table(M1_annotdf[M1_annotdf$annotation== "Promoter", ][, "distanceToTSS"]))
DEseq_norm_lin_TF_DAP <- DEseq_norm_lin_TF %>%
mutate(WRKY_M1 = if_else(row.names(DEseq_norm_lin_TF) %in% as.character(combined_WRKY_RAV_promoters$M1_names), "yes", "no")) %>%
mutate(WRKY_P1 = if_else(row.names(DEseq_norm_lin_TF) %in% combined_WRKY_RAV_promoters$P1_names, "yes", "no")) %>%
mutate(RAV = if_else(row.names(DEseq_norm_lin_TF) %in% combined_WRKY_RAV_promoters$RAV, "yes", "no"))
library(GenomicFeatures)
library(ChIPseeker)
library(rtracklayer)
library(ggvenn)
library(tidyverse)
library(dplyr)
###WRKY promoters
combined_listPromoter <- list(
M1_DE_genes = subset(DEseq_norm_lin_TF_DAP, WRKY_M1 == "yes")[, "geneId"],
P1_DE_genes = subset(DEseq_norm_lin_TF_DAP, WRKY_P1 == "yes")[, "geneId"],
RAV_DE_genes = subset(DEseq_norm_lin_TF_DAP, RAV == "yes")[, "geneId"]
)
RAV_listPromoter <- list(
RAV_name1 = subset(data.frame(peakAnnoList[["SRR13197372"]]), annotation == "Promoter")[, "geneId"],
RAV_name2 = subset(data.frame(peakAnnoList[["SRR13197373"]]), annotation == "Promoter")[, "geneId"]
)
###Unique RAV promoters
Uniq_RAV_promoters <- unique(unlist(RAV_listPromoter, use.names = FALSE))
###WRKY promoters
M1_P1_listPromoter <- list(
M1_names = subset(data.frame(peakAnnoList[["M1"]]), annotation == "Promoter")[, "geneId"],
P1_names = subset(data.frame(peakAnnoList[["P1"]]), annotation == "Promoter")[, "geneId"]
)
ggvenn(
M1_P1_listPromoter,
fill_color = c("#0073C2FF", "#EFC000FF"),
stroke_size = 0.5, set_name_size = 4
)
### combine RAV and WRKY promoter lists
combined_WRKY_RAV_promoters <- append(M1_P1_listPromoter, list(Uniq_RAV_promoters))
names(combined_WRKY_RAV_promoters)[3] <- "RAV"
ggvenn(
combined_WRKY_RAV_promoters,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 4
)
path_to_DE <- "/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/tables/20220621_DEseq_norm_lin_TF.csv"
DEseq_norm_lin_TF <- read.csv(path_to_DE, stringsAsFactors=TRUE)
###annotate DE with binding data
row.names(DEseq_norm_lin_TF) <- DEseq_norm_lin_TF$geneId
DEseq_norm_lin_TF_DAP <- DEseq_norm_lin_TF %>%
mutate(WRKY_M1 = if_else(row.names(DEseq_norm_lin_TF) %in% as.character(combined_WRKY_RAV_promoters$M1_names), "yes", "no")) %>%
mutate(WRKY_P1 = if_else(row.names(DEseq_norm_lin_TF) %in% combined_WRKY_RAV_promoters$P1_names, "yes", "no")) %>%
mutate(RAV = if_else(row.names(DEseq_norm_lin_TF) %in% combined_WRKY_RAV_promoters$RAV, "yes", "no"))
###WRKY promoters
combined_listPromoter <- list(
M1_DE_genes = subset(DEseq_norm_lin_TF_DAP, WRKY_M1 == "yes")[, "geneId"],
P1_DE_genes = subset(DEseq_norm_lin_TF_DAP, WRKY_P1 == "yes")[, "geneId"],
RAV_DE_genes = subset(DEseq_norm_lin_TF_DAP, RAV == "yes")[, "geneId"]
)
length(subset(DEseq_norm_lin_TF_DAP, RAV == "yes")[, "geneId"])
###WRKY promoters
combined_listPromoter <- list(
M1_DE_genes = subset(DEseq_norm_lin_TF_DAP, WRKY_M1 == "yes")[, "geneId"],
P1_DE_genes = subset(DEseq_norm_lin_TF_DAP, WRKY_P1 == "yes")[, "geneId"],
RAV_DE_genes = subset(DEseq_norm_lin_TF_DAP, RAV == "yes")[, "geneId"]
)
ggvenn(
combined_listPromoter,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 4
)
length(unique(sort(combined_listPromoter[[combined_listPromoter]], combined_listPromoter[[combined_listPromoter]])))
length(unique(sort(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])))
combined_listPromoter[["P1_DE_genes"]]
length(unique(sort(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])))
combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])
c(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])
sort(c(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]]))
unique(sort(c(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])))
length(unique(sort(c(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]]))))
intersect(c(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])))
intersect(c(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]]))
intersect(c(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])
)
))
intersect(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])
length(intersect(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]]))
setdiff(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]])
length(setdiff(combined_listPromoter[["P1_DE_genes"]], combined_listPromoter[["RAV_DE_genes"]]))
length(setdiff(combined_listPromoter[["RAV_DE_genes"]]), combined_listPromoter[["P1_DE_genes"]])
length(setdiff(combined_listPromoter[["RAV_DE_genes"]]), combined_listPromoter[["P1_DE_genes"]]))
length(setdiff(combined_listPromoter[["RAV_DE_genes"]], combined_listPromoter[["P1_DE_genes"]]))
View(DEseq_norm_lin_TF_DAP)
table(subset(DEseq_norm_lin_TF_DAP, WRKY_M1 == "yes")[, "cluster_num"])
table(subset(DEseq_norm_lin_TF_DAP, WRKY_P1 == "yes")[, "cluster_num"])
table(subset(DEseq_norm_lin_TF_DAP, WRKY_P1 == "yes")[, "cluster_num"])
GMRav_DAP <- "Glyma.10G204400"
GMWrky_DAP <- "Glyma.06G125600"
DEseq_norm_lin_TF_DAP[GMRav_DAP, ]
DEseq_norm_lin_TF_DAP[GMWrky_DAP, ]
table(subset(DEseq_norm_lin_TF_DAP, WRKY_P1 == "yes")[, "cluster_num"])
table(subset(DEseq_norm_lin_TF_DAP, RAV == "yes")[, "cluster_num"])
###get DE genes
table_path <- "/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/tables/"
###write DE tables with WRKY and RAV direct binding
write.csv(DEseq_norm_lin_TF_DAP, paste(table_path, "20220627_DEseq_norm_lin_TF_DAP.csv", sep =""))
5422441-5422450
2346115-2346144
as.character("agagagagagagagagagagagagagagag")
length(as.character("agagagagagagagagagagagagagagag"))
plotPeakProf2(samplefiles, upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
txdb <- loadDb(txdb.filename)
plotPeakProf2(samplefiles, upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
plotDistToTSS(peakAnnoList, title="Distribution of transcription factor-binding loci \n relative to TSS")
nrow(data.frame(peakAnnoList[["W6"]])
)
ggvenn(
M1_P1_listPromoter,
fill_color = c("#0073C2FF", "#EFC000FF"),
stroke_size = 0.5, set_name_size = 4
)
library(GenomicFeatures)
library(ChIPseeker)
library(rtracklayer)
library(ggvenn)
library(tidyverse)
library(dplyr)
ggvenn(
M1_P1_listPromoter,
fill_color = c("#0073C2FF", "#EFC000FF"),
stroke_size = 0.5, set_name_size = 4
)
plotPeakProf2(samplefiles, upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
txdb <- loadDb(txdb.filename)
plotPeakProf2(samplefiles, upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
gene <- seq2gene(M1_peaks, tssRegion = c(-1000, 1000), flankDistance = 1000, TxDb=txdb)
plotAnnoBar(M1_peaks)
plotAnnoBar(peakAnnoList)
plotAnnoBar(peakAnnoList[["M1"]])
plotAnnoBar(peakAnnoList[["P1"]])
P1_bar <- plotAnnoBar(peakAnnoList[["P1"]])
P1_bar$data
P1_bar$mapping
P1_bar
P1_bar + title(main=WRKY30_P1)
P1_bar + title(main="WRKY30_P1")
P1_bar <- P1_bar + title(main="WRKY30_P1")
P1_bar + theme(legend.position="bottom")
P1_bar + theme(legend.position="bottom") + lab("WRKY30_P1")
P1_bar + theme(legend.position="bottom") + labs("WRKY30_P1")
P1_bar$title
P1_bar + theme(legend.position="bottom") + labs(title="WRKY30_P1")
install.packages("ggpubr")
library(ggpubr)
theme_set(theme_pubr())
P1_bar <- P1_bar + theme(legend.position="bottom")
M1_bar <- plotAnnoBar(peakAnnoList[["M1"]])
M1_bar <- M1_bar + theme(legend.position="none")
P1_bar <- plotAnnoBar(peakAnnoList[["P1"]])
P1_bar + theme(legend.position="bottom") + labs("WRKY30_P1")
P1_bar <- plotAnnoBar(peakAnnoList[["P1"]])
P1_bar <- P1_bar + theme(legend.position="bottom") + labs(title="")
M1_bar <- plotAnnoBar(peakAnnoList[["M1"]])
M1_bar <- M1_bar + theme(legend.position="none") + + labs(title="")
M1_bar <- M1_bar + theme(legend.position="none") + labs(title="")
P1_M1figure <- ggarrange(M1_bar, P1_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 pathogen"),
nrow = 2)
P1_M1figure
P1_M1figure <- ggarrange(M1_bar, P1_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen"),
nrow = 2)
pdf("p1_m1_peak_distribution.pdf")    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
jpeg("p1_m1_peak_distribution.jpeg")    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
jpeg("p1_m1_peak_distribution.jpeg", res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
jpeg("p1_m1_peak_distribution.jpeg", width = 4, height = 4, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 4, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen"),
nrow = 2, align = "h")
P1_bar + theme(legend.position="bottom") + labs(title="WRKY30_P1")
?ggarrange
P1_M1figure <- ggarrange(M1_bar, P1_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen"),
nrow = 2, align = "hv")
P1_M1figure <- ggarrange(M1_bar, P1_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen"),
nrow = 2, heights = c(1, 1.5))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen"),
nrow = 2, heights = c(1, 1.2))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen"),
nrow = 2, heights = c(1, 1.3))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
####make RAV, P1 and M1 figures
##"SRR13197372", "SRR13197373"
RAV_rep1_bar <- plotAnnoBar(peakAnnoList[["SRR13197372"]])
library(GenomicFeatures)
library(ChIPseeker)
library(rtracklayer)
library(ggvenn)
library(tidyverse)
library(dplyr)
library(ggpubr)
theme_set(theme_pubr())
####make RAV, P1 and M1 figures
##"SRR13197372", "SRR13197373"
RAV_rep1_bar <- plotAnnoBar(peakAnnoList[["SRR13197372"]])
RAV_rep2_bar <- plotAnnoBar(peakAnnoList[["SRR13197373"]])
RAV_rep1_bar <- RAV_rep1_bar + theme(legend.position="bottom") + labs(title="")
RAV_rep2_bar <- plotAnnoBar(peakAnnoList[["SRR13197373"]])
RAV_rep2_bar <- RAV_rep2_bar + theme(legend.position="bottom") + labs(title="")
?ggarrange
P1_M1figure <- ggarrange(M1_bar, P1_bar, RAV_rep1_bar, RAV_rep2_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"),
nrow = 2, ncol=2, heights = c(1, 1.3, 1, 1))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
####make RAV, P1 and M1 figures
##"SRR13197372", "SRR13197373"
RAV_rep1_bar <- plotAnnoBar(peakAnnoList[["SRR13197372"]])
RAV_rep1_bar <- RAV_rep1_bar + theme(legend.position="none") + labs(title="")
RAV_rep2_bar <- plotAnnoBar(peakAnnoList[["SRR13197373"]])
RAV_rep2_bar <- RAV_rep2_bar + theme(legend.position="bottom") + labs(title="")
P1_bar <- plotAnnoBar(peakAnnoList[["P1"]])
P1_bar <- P1_bar + theme(legend.position="none") + labs(title="")
M1_bar <- plotAnnoBar(peakAnnoList[["M1"]])
M1_bar <- M1_bar + theme(legend.position="none") + labs(title="")
P1_M1figure <- ggarrange(M1_bar, P1_bar, RAV_rep1_bar, RAV_rep2_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"),
nrow = 2, ncol=2, heights = c(1, 1, 1, 1.3))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar, RAV_rep1_bar, RAV_rep2_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"),
nrow = 2, ncol=2, heights = c(1, 1, 1, 1.7))
jpeg("p1_m1_peak_distribution.jpeg", width = 9, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar, RAV_rep1_bar, RAV_rep2_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"),
nrow = 2, ncol=2, heights = c(1, 1, 1, 2))
jpeg("p1_m1_peak_distribution.jpeg", width = 9, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar, RAV_rep1_bar, RAV_rep2_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"),
nrow = 2, ncol=2, heights = c(1, 1, 1, 2))
jpeg("p1_m1_peak_distribution.jpeg", width = 10, height = 8, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar, RAV_rep1_bar, RAV_rep2_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"),
nrow = 4,  heights = c(1, 1, 1, 2))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 12, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
P1_M1figure <- ggarrange(M1_bar, P1_bar, RAV_rep1_bar, RAV_rep2_bar,
labels = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"),
nrow = 4,  heights = c(1, 1, 1, 1.3))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 12, units = 'in', res = 300)    # starts writing a PDF to file
P1_M1figure                    # makes the actual plot
dev.off()                     # closes the PDF file
ggvenn(
combined_listPromoter,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 4
)
library(GenomicFeatures)
library(ChIPseeker)
library(rtracklayer)
library(ggvenn)
library(tidyverse)
library(dplyr)
library(ggpubr)
ggvenn(
combined_listPromoter,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF"),
stroke_size = 0.5, set_name_size = 4
)
P1_bar <- plotAnnoBar(peakAnnoList[["P1"]])
library(GenomicFeatures)
library(ChIPseeker)
library(rtracklayer)
library(ggvenn)
library(tidyverse)
library(dplyr)
library(ggpubr)
P1_bar <- plotAnnoBar(peakAnnoList[["P1"]])
P1_bar
plotDistToTSS(peakAnnoList[["P1"]])
samplefiles[c(1, 3)]
samplefiles[c("M1", "P1")]
plotPeakProf2(samplefiles[c("M1", "P1")], upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
plotPeakProf2(samplefiles, upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
txdb <- loadDb(txdb.filename)
plotPeakProf2(samplefiles[c("M1", "P1")], upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
plotPeakProf2(samplefiles, upstream = rel(0.2), downstream = rel(0.2),
conf = 0.95, by = "gene", type = "body",
TxDb = txdb, facet = "row", nbin = 800)
plotAnnoBar(M1_peaks)
tagMatrixList <- lapply(samplefiles[c("M1", "P1")], getTagMatrix, windows=promoter)
plotAvgProf(tagMatrixList, xlim=c(-1000, 1000), conf=0.95,resample=500, facet="row")
tagMatrixList <- lapply(samplefiles[c("M1", "P1")], getTagMatrix, windows=promoter)
library(GenomicFeatures)
library(ChIPseeker)
library(rtracklayer)
library(ggvenn)
library(tidyverse)
library(dplyr)
tagMatrixList <- lapply(samplefiles[c("M1", "P1")], getTagMatrix, windows=promoter)
txdb <- loadDb(txdb.filename)
tagMatrixList <- lapply(samplefiles[c("M1", "P1")], getTagMatrix, windows=promoter)
tagHeatmap(tagMatrixList, xlim=c(-1000, 1000), color=NULL)
?tagHeatmap
samplefiles
tagMatrixList <- lapply(samplefiles[c("M1", "P1", "SRR13197372", "SRR13197373")], getTagMatrix, windows=promoter)
tagHeatmap(tagMatrixList, xlim=c(-1000, 1000), color=NULL)
jpeg("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg", width = 350, height = "350")
jpeg("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg",
units = "in", width = 5, height = 4)
?png
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg",
width = 480, height = 480, units = "px", pointsize = 12)
# 2. Create the plot
tagHeatmap(tagMatrixList, xlim=c(-1000, 1000), color=NULL)
# 3. Close the file
dev.off()
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg",
width = 8, height = 12, units = "in", pointsize = 12)
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg",
width = 8, height = 12, units = "in", pointsize = 12, res=300)
# 2. Create the plot
tagHeatmap(tagMatrixList, xlim=c(-1000, 1000), color=NULL)
# 3. Close the file
dev.off()
?tagHeatmap
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg",
width = 8, height = 12, units = "in", pointsize = 12, res=300)
# 2. Create the plot
tagHeatmap(tagMatrixList, xlim=c(-1000, 1000), color=NULL,
title = c("GmWRKY_M1", "GmWRKY_P1", "GmRAV_rep1", "GmRAV_rep2"))
# 3. Close the file
dev.off()
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg",
width = 8, height = 12, units = "in", pointsize = 12, res=300)
# 2. Create the plot
tagHeatmap(tagMatrixList, xlim=c(-1000, 1000), color=NULL,
title = c("GmWRKY Mock", "GmWRKY Pathogen", "RAV rep1", "RAV rep2"))
# 3. Close the file
dev.off()
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220802_tagHeatmap.jpg",
width = 8, height = 12, units = "in", pointsize = 12, res=300)
# 2. Create the plot
tagHeatmap(tagMatrixList, xlim=c(-1000, 1000), color=NULL,
title = c("GmWRKY30 Mock", "GmWRKY30 Pathogen", "RAV rep1", "RAV rep2"))
# 3. Close the file
dev.off()
names(peakAnnoList)
library(GenomicFeatures)
library(ChIPseeker)
library(rtracklayer)
library(ggvenn)
library(tidyverse)
library(dplyr)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
W4_bar <- plotAnnoBar(peakAnnoList[["W4"]])
W4_bar <- W4_bar + theme(legend.position="none") + labs(title="")
W6_bar <- plotAnnoBar(peakAnnoList[["W6"]])
W6_bar <- W6_bar + theme(legend.position="none") + labs(title="")
W4_W6_figure <- ggarrange(W4_bar, W6_bar,
labels = c("GmMYB61", "GmWRKY4"),
nrow = 4,  heights = c(1, 1))
jpeg("p1_m1_peak_distribution.jpeg", width = 6, height = 12, units = 'in', res = 300)    # starts writing a PDF to file
W4_W6_figure                    # makes the actual plot
dev.off()                     # closes the PDF file
jpeg("W4_W6_peak_distribution.jpeg", width = 6, height = 12, units = 'in', res = 300)    # starts writing a PDF to file
W4_W6_figure                    # makes the actual plot
dev.off()                     # closes the PDF file
W4_W6_figure <- ggarrange(W4_bar, W6_bar,
labels = c("GmMYB61", "GmWRKY4"),
nrow = 2,  heights = c(1, 1))
jpeg("W4_W6_peak_distribution.jpeg", width = 6, height = 12, units = 'in', res = 300)    # starts writing a PDF to file
W4_W6_figure                    # makes the actual plot
txdb <- loadDb(txdb.filename)
tagMatrixListW4_W6 <- lapply(samplefiles[c("W4", "W6")], getTagMatrix, windows=promoter)
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220816_tagHeatmapW4_W6.jpg",
width = 8, height = 12, units = "in", pointsize = 12, res=300)
# 2. Create the plot
tagHeatmap(tagMatrixListW4_W6, xlim=c(-1000, 1000), color=NULL,
title = c("GmMYB61", "GmWRKY4"))
# 3. Close the file
dev.off()
png("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/fig/20220816_tagHeatmapW4_W6.jpg",
width = 8, height = 12, units = "in", pointsize = 12, res=300)
# 2. Create the plot
tagHeatmap(tagMatrixListW4_W6, xlim=c(-1000, 1000), color=NULL,
title = c("GmMYB61", "GmWRKY2"))
# 3. Close the file
dev.off()
W4_W6_figure <- ggarrange(W4_bar, W6_bar,
labels = c("GmMYB61", "GmWRKY2"),
nrow = 2,  heights = c(1, 1))
jpeg("W4_W6_peak_distribution.jpeg", width = 6, height = 12, units = 'in', res = 300)    # starts writing a PDF to file
W4_W6_figure                    # makes the actual plot
dev.off()                     # closes the PDF file
jpeg("W4_W6_peak_distribution.jpeg", width = 6, height = 6, units = 'in', res = 300)    # starts writing a PDF to file
W4_W6_figure                    # makes the actual plot
dev.off()                     # closes the PDF file
View(M1_bar)
reticulate::repl_python()
y
reticulate::repl_python()
import os
Y
reticulate::repl_python()
Y
gc()
reticulate::repl_python()
geneid_cname <- read.delim("~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GRN/08_fimo_scan/Motif_regions/geneid_cname.txt", header=FALSE)
View(geneid_cname)
`20220924_motifs` <- read.table("~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GRN/08_fimo_scan/Motif_regions/20220924_motifs.txt", quote="\"", comment.char="")
View(`20220924_motifs`)
motifs <- read.table("~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GRN/08_fimo_scan/Motif_regions/20220924_motifs.txt", quote="\"", comment.char="")
?merge
motif_geneid <- merge(geneid_cname, motif, by.x = "V2", by.y = "V1",
all.y = TRUE)
motif_geneid <- merge(geneid_cname, motifs, by.x = "V2", by.y = "V1",
all.y = TRUE)
View(motif_geneid)
reticulate::repl_python()
reticulate::repl_python()
head(freq_motifs_gene)
freq_motifs_gene <- bed %>%
count(V8, V4) %>%
group_by(V8) %>%
spread(V4, n)
library(stringr)
library(dplyr)
library(tidyverse)
library(stringr)
library(ggplot2)
library(tidytext)
library("xlsx")
freq_motifs_gene <- bed %>%
count(V8, V4) %>%
group_by(V8) %>%
spread(V4, n)
bed <- read.table("/Users/aselawijeratne/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GRN/20220801_GRN/20220918_bindingsites/all_motif_sorted_new.bed",header = FALSE, sep="\t",stringsAsFactors=FALSE, quote="")
freq_motifs_gene <- bed %>%
count(V8, V4) %>%
group_by(V8) %>%
spread(V4, n)
head(freq_motifs_gene)
RNAseq_data_motif_pred <- merge(RNAseq_data_newBinding, freq_motifs_gene, by.x = "geneId", by.y = "V8")
RNAseq_data_newBinding <- read.csv("~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/tables/ 20221014_RNAseq_data_newBinding.csv")
RNAseq_data_motif_pred <- merge(RNAseq_data_newBinding, freq_motifs_gene, by.x = "geneId", by.y = "V8")
?merge
RNAseq_data_motif_pred <- merge(RNAseq_data_newBinding, freq_motifs_gene, by.x = "geneId", by.y = "V8", all.x = TRUE)
View(RNAseq_data_motif_pred)
write.xlsx(RNAseq_data_motif_pred, "~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/tables/20221019_RNAseq_data_motif.xlsx", sheetName = "expression", append = FALSE)
write.csv(RNAseq_data_motif_pred, "~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/tables/20221019_RNAseq_data_motif.csv", quote = FALSE)
write_csv(RNAseq_data_motif_pred, "~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/tables/20221019_RNAseq_data_motif.csv", quote = FALSE)
write_csv(RNAseq_data_motif_pred, "~/Documents/Projects/Soy_RNAseq/20210428_RNAseq/GO/Data/tables/20221019_RNAseq_data_motif.csv")
median(16, 16, 1, 17)
